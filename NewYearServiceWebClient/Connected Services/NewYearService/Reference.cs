//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NewYearServiceWebClient.NewYearService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeToNewYear", Namespace="http://schemas.datacontract.org/2004/07/NewYearService")]
    [System.SerializableAttribute()]
    public partial class TimeToNewYear : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SecondsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Days {
            get {
                return this.DaysField;
            }
            set {
                if ((this.DaysField.Equals(value) != true)) {
                    this.DaysField = value;
                    this.RaisePropertyChanged("Days");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Hours {
            get {
                return this.HoursField;
            }
            set {
                if ((this.HoursField.Equals(value) != true)) {
                    this.HoursField = value;
                    this.RaisePropertyChanged("Hours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Minutes {
            get {
                return this.MinutesField;
            }
            set {
                if ((this.MinutesField.Equals(value) != true)) {
                    this.MinutesField = value;
                    this.RaisePropertyChanged("Minutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Seconds {
            get {
                return this.SecondsField;
            }
            set {
                if ((this.SecondsField.Equals(value) != true)) {
                    this.SecondsField = value;
                    this.RaisePropertyChanged("Seconds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NewYearService.INewYearService")]
    public interface INewYearService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewYearService/GetDaysToNewYear", ReplyAction="http://tempuri.org/INewYearService/GetDaysToNewYearResponse")]
        NewYearServiceWebClient.NewYearService.TimeToNewYear GetDaysToNewYear(System.DateTime start);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewYearService/GetDaysToNewYear", ReplyAction="http://tempuri.org/INewYearService/GetDaysToNewYearResponse")]
        System.Threading.Tasks.Task<NewYearServiceWebClient.NewYearService.TimeToNewYear> GetDaysToNewYearAsync(System.DateTime start);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INewYearServiceChannel : NewYearServiceWebClient.NewYearService.INewYearService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewYearServiceClient : System.ServiceModel.ClientBase<NewYearServiceWebClient.NewYearService.INewYearService>, NewYearServiceWebClient.NewYearService.INewYearService {
        
        public NewYearServiceClient() {
        }
        
        public NewYearServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NewYearServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewYearServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewYearServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public NewYearServiceWebClient.NewYearService.TimeToNewYear GetDaysToNewYear(System.DateTime start) {
            return base.Channel.GetDaysToNewYear(start);
        }
        
        public System.Threading.Tasks.Task<NewYearServiceWebClient.NewYearService.TimeToNewYear> GetDaysToNewYearAsync(System.DateTime start) {
            return base.Channel.GetDaysToNewYearAsync(start);
        }
    }
}
